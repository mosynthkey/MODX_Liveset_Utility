{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue","webpack:///./src/modx_liveset_utility.js","webpack:///./src/components/ModxSetlistUtility.vue","webpack:///./src/components/ModxSetlistUtility.vue?cd6f","webpack:///./src/App.vue?a2da","webpack:///./src/quasar-user-options.js","webpack:///./src/main.js","webpack:///./src/App.vue?43e4","webpack:///./src/components/ModxSetlistUtility.vue?ca00"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_createBlock","_component_ModxSetlistUtility","NUM_BANK","NUM_PAGE","NUM_SLOT","SIZE_SLOT","SIZE_PAGE","SIZE_BANK","ModxLivesetUtility","this","initialize","x8aData_","isDataValid_","bankAddresses_","Array","bankNameAddresses_","pageAddresses_","bankIndex","slotAddresses_","pageIndex","numOfBanks_","elstAddress_","x8aDataBuffer","x8aDataBuffer_","Buffer","from","header_buffer","toString","dlst_addr_index","indexOf","dlst_addr","readInt32BE","readInt16BE","readIndex","slotIndex","elst_addr_index","createValidStringFromNullTerminatedBufferIndex","fromBankIndex","fromPageIndex","toBankIndex","toPageIndex","writeIndex","index","copyAndPastePage","bankIndexA","pageIndexA","bankIndexB","pageIndexB","indexA","indexB","aData","swapPage","bankData","bankNumbers","bankEntryAddress","size","bankNumber","readUInt16BE","writeUInt16BE","writeUInt8","readUInt8","console","log","getBankName","getPageName","comment","getSlotComment","buffer","setup","__props","utility","ref","Utility","banks","fileOpenRef","clipBoard","numOfBanks","loadedButNoBank","loadedButInvalid","isEdit","editButOpen","fileName","couldntDownload","reasonWhyCouldntDownload","copiedPageName","uploadFile","file","fileReader","FileReader","onload","setX8ADataBuffer","update","isValid","isLoaded","fileObject","e","init","pages","slots","numOfPages","bankName","pageName","download","fileName_","substring","lastIndexOf","status","exportFile","openFile","pickFiles","copyPage","pastePage","swapBank","isValidBankIndex","isValidPageIndex","__exports__","QLayout","QHeader","QToolbar","QToolbarTitle","QFile","QBtn","QPageContainer","QDialog","QCard","QCardSection","QCardActions","QPage","QList","QItem","QItemSection","QSeparator","ClosePopup","components","ModxSetlistUtility","render","config","plugins","createApp","App","use","Quasar","quasarUserOptions","mount"],"mappings":"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","file":"js/index.9ede7dc8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","<template>\n  <ModxSetlistUtility/>\n</template>\n\n<script>\nimport ModxSetlistUtility from './components/ModxSetlistUtility.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    ModxSetlistUtility\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</style>\n","// YAMAHA MODX Liveset Utility\n// Copyright © 2022 Masaki Ono. All rights reserved.\n\n// these const values are only used in ModxLivesetUtility\n\nimport { Buffer } from 'buffer';\n//import { write } from 'fs';\n\nconst NUM_BANK = 8;\nconst NUM_PAGE = 16;\nconst NUM_SLOT = 16;\nconst SIZE_SLOT = 0x11E;\nconst SIZE_PAGE = SIZE_SLOT * 16 + 0x15;\nconst SIZE_BANK = SIZE_PAGE * 16 + 0x04 + 0x04 + 0x04 + 0x15;\n\nclass ModxLivesetUtility {\n    constructor() {\n        this.initialize();\n    }\n    \n    initialize() {\n        this.x8aData_ = null;\n        this.isDataValid_ = false;\n\n        this.bankAddresses_ = new Array(NUM_BANK);\n        this.bankNameAddresses_ = new Array(NUM_BANK);\n        \n        this.pageAddresses_ = new Array(NUM_BANK);\n        for (let bankIndex = 0; bankIndex < NUM_BANK; ++bankIndex) this.pageAddresses_[bankIndex] = new Array(NUM_PAGE);\n\n        this.slotAddresses_ = new Array(NUM_BANK);\n        for (let bankIndex = 0; bankIndex < NUM_BANK; ++bankIndex) {\n            this.slotAddresses_[bankIndex] = new Array(NUM_PAGE);\n            for (let pageIndex = 0; pageIndex < NUM_PAGE; ++pageIndex) {\n                this.slotAddresses_[bankIndex][pageIndex] = new Array(NUM_SLOT);\n            }\n        }\n\n        this.numOfBanks_ = 0;\n\n        this.elstAddress_ = 0;\n    }\n\n    setX8ADataBuffer(x8aDataBuffer) {\n        this.initialize();\n\n        this.x8aDataBuffer_ = Buffer.from(x8aDataBuffer);\n\n        // Search DLST from header\n        const header_buffer = x8aDataBuffer.slice(0, 0x110);\n\n        if (header_buffer.slice(0, 11).toString() != \"YAMAHA-YSFC\")  {\n            throw(\"Invalid data\")\n        }\n\n        let dlst_addr_index = header_buffer.indexOf(Buffer.from('DLST'));\n        if (dlst_addr_index < 0) throw('DLST not found in the header');\n        dlst_addr_index += 0x04;\n        const dlst_addr = x8aDataBuffer.readInt32BE(dlst_addr_index);\n\n        // Mark addresses\n        this.numOfBanks_ = x8aDataBuffer.readInt16BE(dlst_addr + 4);\n        if (NUM_BANK < this.numOfBanks_) throw(\"Invalid number of banks\")\n\n        let readIndex = dlst_addr + 4 /* DLST */ + 4 /* Size */ + 4 /* Num of Banks*/;\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            this.bankAddresses_[bankIndex] = readIndex;\n\n            // Skip \"Data\" + ?\n            readIndex += 4 /* Data */ + 4 /* Size */ + 4 /* Num of Banks*/;\n\n            this.bankNameAddresses_[bankIndex] = readIndex;\n            readIndex += 0x15;\n\n            for (let pageIndex = 0; pageIndex < NUM_PAGE; ++pageIndex) {\n                this.pageAddresses_[bankIndex][pageIndex] = readIndex;\n                readIndex += 0x15;\n                \n                for (let slotIndex = 0; slotIndex < NUM_SLOT; ++slotIndex) {\n                    this.slotAddresses_[bankIndex][pageIndex][slotIndex] = readIndex;\n                    readIndex += SIZE_SLOT;\n                }\n            }\n        }\n\n        // ELST       \n        let elst_addr_index = header_buffer.indexOf(Buffer.from('ELST'));\n        if (elst_addr_index < 0) throw('ELST not found');\n        elst_addr_index += 0x04;\n        this.elstAddress_ = x8aDataBuffer.readInt32BE(elst_addr_index);\n\n        /*\n        readIndex = elst_addr + 0x0c;\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            readIndex += 0x04; // Skip \"Entr\"\n\n            const size = x8aDataBuffer.readInt32BE(readIndex);\n            readIndex += 0x04;\n            const name_length = size - 0x16 - 0x02;\n\n            console.log(x8aDataBuffer.slice(readIndex + 0x14, readIndex + 0x16));\n            readIndex += 0x16;\n\n            console.log(this.createValidStringFromNullTerminatedBufferIndex(readIndex, name_length + 0x02));\n            readIndex += name_length + 0x02;\n        }\n        */\n        \n        this.isDataValid_ = true;\n    }\n\n    getX8ADataBuffer() {\n        return this.x8aDataBuffer_;\n    }\n\n    getNumOfBanks() {\n        if (!this.isDataValid_) throw(\"Invalid data\");\n\n        return this.numOfBanks_;\n    }\n\n    getBankName(bankIndex) {\n        if (!this.isDataValid_)            throw(\"Invalid data\");\n        if (this.numOfBanks_ <= bankIndex) throw(\"Bank index : out of range\");\n\n        return this.createValidStringFromNullTerminatedBufferIndex(this.bankNameAddresses_[bankIndex], 0x15);\n    }\n\n    getPageName(bankIndex, pageIndex) {\n        if (!this.isDataValid_)            throw(\"Invalid data\");\n        if (this.numOfBanks_ <= bankIndex) throw(\"Bank index : out of range\");\n        if (NUM_PAGE <= pageIndex)         throw(\"Page index : out of range\");\n\n        return this.createValidStringFromNullTerminatedBufferIndex(this.pageAddresses_[bankIndex][pageIndex], 0x15);\n    }\n\n    getSlotComment(bankIndex, pageIndex, slotIndex) {\n        if (!this.isDataValid_)            throw(\"Invalid data\");\n        if (this.numOfBanks_ <= bankIndex) throw(\"Bank index : out of range\");\n        if (NUM_PAGE <= pageIndex)         throw(\"Page index : out of range\");\n        if (NUM_SLOT <= slotIndex)         throw(\"Slot index : out of range\");\n\n        return this.createValidStringFromNullTerminatedBufferIndex(this.slotAddresses_[bankIndex][pageIndex][slotIndex], 0x15);\n    }\n\n    copyAndPastePage(fromBankIndex, fromPageIndex, toBankIndex, toPageIndex) {\n        const readIndex  = this.pageAddresses_[fromBankIndex][fromPageIndex];\n        const writeIndex = this.pageAddresses_[toBankIndex][toPageIndex];\n\n        for (let index = 0; index < SIZE_PAGE; ++index) {\n            this.x8aDataBuffer_[writeIndex + index] = this.x8aDataBuffer_[readIndex + index];\n        }\n    }\n\n    copyAndPasteAllPages(fromBankIndex, toBankIndex) {\n        for (let pageIndex = 0; pageIndex < NUM_PAGE; ++pageIndex) {\n            this.copyAndPastePage(fromBankIndex, pageIndex, toBankIndex, pageIndex);\n        }\n    }\n\n    swapPage(bankIndexA, pageIndexA, bankIndexB, pageIndexB) {\n        const indexA =  this.pageAddresses_[bankIndexA][pageIndexA];\n        const indexB =  this.pageAddresses_[bankIndexB][pageIndexB];\n\n        for (let index = 0; index < SIZE_PAGE; ++index) {\n            const aData = this.x8aDataBuffer_[indexA + index];\n            this.x8aDataBuffer_[indexA + index] = this.x8aDataBuffer_[indexB + index];\n            this.x8aDataBuffer_[indexB + index] = aData;\n        }\n    }\n\n    swapAllPages(bankIndexA, bankIndexB) {\n        for (let pageIndex = 0; pageIndex < NUM_PAGE; ++pageIndex) {\n            this.swapPage(bankIndexA, pageIndex, bankIndexB, pageIndex);\n        }\n    }\n\n    swapBank(bankIndexA, bankIndexB) {\n        // Edit ELIST\n        let readIndex = this.elstAddress_ + 0x04 * 3;\n        let bankData = new Array(this.numOfBanks_);\n        let bankNumbers = new Array(this.numOfBanks_);\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            const bankEntryAddress = readIndex;\n            let size = this.x8aDataBuffer_.readInt32BE(bankEntryAddress + 0x04) + 0x04 /* Entr */ + 0x04 /* size */;\n\n            const data = Buffer.from(this.x8aDataBuffer_.slice(bankEntryAddress, bankEntryAddress + size));\n            const bankNumber = data.readUInt16BE(0x04 * 3 + 0x02 * 3);\n\n            // swap chunk\n            if (bankIndex == bankIndexA) {\n                bankData   [bankIndexB] = data;\n            } else if (bankIndex == bankIndexB) {\n                bankData   [bankIndexA] = data;\n            } else {\n                bankData[bankIndex] = data;\n            }\n            bankNumbers[bankIndex] = bankNumber;\n\n            readIndex += size;\n        }\n\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            // correct bank index\n            bankData[bankIndex].writeUInt16BE(bankIndex,                 0x04 * 3           ); // bankIndex\n            bankData[bankIndex].writeUInt16BE(0x0c + 0x1F71 * bankIndex, 0x04 * 3 + 0x02    ); // size?\n            bankData[bankIndex].writeUInt16BE(bankNumbers[bankIndex],    0x04 * 3 + 0x02 * 3); // bankIndex\n        }   \n\n        let writeIndex = this.elstAddress_ + 0x04 * 3;\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            for (let readIndex = 0; readIndex < bankData[bankIndex].length; ++readIndex) {\n                this.x8aDataBuffer_.writeUInt8(bankData[bankIndex].readUInt8(readIndex), writeIndex);\n                ++writeIndex;\n            }\n        }\n\n        // Edit DLST\n        const indexA =  this.bankAddresses_[bankIndexA];\n        const indexB =  this.bankAddresses_[bankIndexB];\n\n        for (let index = 0; index < SIZE_BANK; ++index) {\n            const aData = this.x8aDataBuffer_[indexA + index];\n            this.x8aDataBuffer_[indexA + index] = this.x8aDataBuffer_[indexB + index];\n            this.x8aDataBuffer_[indexB + index] = aData;\n        }\n    }\n\n    print() {\n        // for debug\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            console.log(`Bank${bankIndex + 1} : ${this.getBankName(bankIndex)}`);\n\n            for (let pageIndex = 0; pageIndex < NUM_PAGE; ++pageIndex) {\n                console.log(`  Page${pageIndex + 1} : ${this.getPageName(bankIndex, pageIndex)}`);\n                for (let slotIndex = 0; slotIndex < NUM_SLOT; ++slotIndex) {\n                    const comment = this.getSlotComment(bankIndex, pageIndex, slotIndex);\n                    if (comment != \"\") console.log(`    Slot${slotIndex + 1} : ${comment}`);\n                }\n            }\n        }\n    }\n\n    isValidData() {\n        return this.isDataValid_;\n    }\n\n    createValidStringFromNullTerminatedBufferIndex(index, size) {\n        const buffer = this.x8aDataBuffer_.slice(index, index + size);\n        return buffer.slice(0, buffer.indexOf(0)).toString();\n    }\n}\n\nexport default {\n    ModxLivesetUtility\n};","<template>\n    <div id=\"q-app\">\n        <q-layout class=\"shadow-2 rounded-borders\">\n            <q-header>\n                <q-toolbar class=\"bg-header\">\n                    <q-toolbar-title>MODX LiveSet Utility</q-toolbar-title>\n\n                    <q-file ref=\"fileOpenRef\" class=\"hidden\" @input=\"uploadFile\" accept=\".X8A\"></q-file>\n\n                    <q-btn v-if=\"clipBoard.bankIndex != -1\" :label=\"copiedPageName\" @click=\"clipBoard.bankIndex = -1\" icon=\"content_paste_off\" color=\"card-background\" no-caps\n                    :class=\"isLoaded ? 'q-mr-md' : ''\"  />\n\n                    <q-btn label=\"Open\" @click=\"openFile()\" icon=\"file_open\" color=\"open\"\n                        :class=\"isLoaded ? 'q-mr-md' : ''\" no-caps />\n                    <q-btn v-if=\"isLoaded\" label=\"Download\" @click=\"download()\" icon=\"file_download\" color=\"download\"\n                        no-caps />\n\n                </q-toolbar>\n            </q-header>\n\n            <q-page-container>\n                <q-dialog v-model=\"loadedButNoBank\">\n                    <q-card>\n                        <q-card-section>\n                            <div class=\"text-h6\">Error</div>\n                        </q-card-section>\n\n                        <q-card-section class=\"q-pt-none\">\n                            No liveset data is found in this file. <br>\n                            Please create liveset with MODX and use this app.<br>\n                            <br>\n                            このデータにlivesetの情報が含まれていませんでした。<br>\n                            MODXでLivesetの編集をした後にこのツールをご使用ください。<br>\n                        </q-card-section>\n\n                        <q-card-actions align=\"right\">\n                            <q-btn flat label=\"OK\" color=\"primary\" v-close-popup />\n                        </q-card-actions>\n                    </q-card>\n                </q-dialog>\n\n                <q-dialog v-model=\"loadedButInvalid\">\n                    <q-card>\n                        <q-card-section>\n                            <div class=\"text-h6\">Error</div>\n                        </q-card-section>\n\n                        <q-card-section class=\"q-pt-none\">\n                            Unknown data format.<br>\n                            <br>\n                            このアプリでは読み込めないファイルです。<br>\n                        </q-card-section>\n\n                        <q-card-actions align=\"right\">\n                            <q-btn flat label=\"OK\" color=\"primary\" v-close-popup />\n                        </q-card-actions>\n                    </q-card>\n                </q-dialog>\n\n                <q-dialog v-model=\"editButOpen\">\n                    <q-card>\n                        <q-card-section>\n                            <div class=\"text-h6\">Alert</div>\n                        </q-card-section>\n\n                        <q-card-section class=\"q-pt-none\">\n                            Do you want to discard the change and open another file?<br>\n                            変更内容を破棄して別のBackup fileを開きますか?\n                        </q-card-section>\n\n                        <q-card-actions align=\"right\">\n                            <q-btn flat label=\"OK\" @click=\"fileOpenRef.pickFiles()\" v-close-popup/>\n                            <q-btn flat label=\"Cancel\" color=\"primary\" v-close-popup />\n                        </q-card-actions>\n                    </q-card>\n                </q-dialog>\n\n\n                <q-dialog v-model=\"couldntDownload\">\n                    <q-card>\n                        <q-card-section>\n                            <div class=\"text-h6\">Error</div>\n                        </q-card-section>\n\n                        <q-card-section class=\"q-pt-none\">\n                            Couldn't download in some reason.<br>\n                            ダウンロードできませんでした。<br>\n                            <br>\n                            {{reasonWhyCouldntDownload}}\n                        </q-card-section>\n\n                        <q-card-actions align=\"right\">\n                            <q-btn flat label=\"OK\" color=\"primary\" v-close-popup />\n                        </q-card-actions>\n                    </q-card>\n                </q-dialog>\n\n                <q-page class=\"bg-main fit row justify-center\">\n                    <div v-if=\"isLoaded\" class=\"q-pa-md row items-center q-gutter-md\">\n                        <q-card flat v-for=\"bank in banks\" :key=\"bank.index\"\n                            style=\"width: 300px\">\n                            <q-list dense class=\"bg-card-header text-white\" style=\"max-width: 600px\">\n                                <q-item>\n                                    <q-item-section>\n                                        <b>{{ bank.name }}</b>\n                                    </q-item-section>\n                                    \n                                    <q-item-section side>\n                                        <div class=\"text-grey-8 q-gutter-xs\">\n                                            <q-btn :disable=\"bank.index==0\" @click=\"swapBank(bank.index, bank.index - 1)\"\n                                                :class=\"bank.index==0 ? 'text-grey-8' : 'text-white'\" size=\"10px\" flat dense round icon=\"west\" no-caps />\n                                            <q-btn :disable=\"bank.index==7\" @click=\"swapBank(bank.index, bank.index + 1)\"\n                                                :class=\"bank.index==7 ? 'text-grey-8' : 'text-white'\" size=\"10px\" flat dense round icon=\"east\" no-caps />\n                                        </div>\n                                    </q-item-section>\n                                </q-item>\n                            </q-list>\n\n                            <q-separator />\n\n                            <q-list dense class=\"bg-card-background text-white\" style=\"max-width: 600px\" v-for=\"page in bank.pages\"\n                                :key=\"page.index\">\n                                <q-item>\n                                    <q-item-section>\n                                        <b>{{ page.name }}</b>\n                                    </q-item-section>\n\n                                    <q-item-section side>\n                                        <div class=\"text-grey-8 q-gutter-xs\">\n                                            <q-btn :disabled=\"page.index==0\"\n                                                @click=\"swapPage(bank.index, page.index, page.index - 1)\" :class=\"page.index==0 ? 'text-grey-8' : 'text-white'\"\n                                                size=\"10px\" flat dense round icon=\"arrow_upward\"/>\n                                            <q-btn :disabled=\"page.index==15\"\n                                                @click=\"swapPage(bank.index, page.index, page.index + 1)\" :class=\"page.index==15 ? 'text-grey-8' : 'text-white'\"\n                                                size=\"10px\" flat dense round icon=\"arrow_downward\" />\n                                            <q-btn v-if=\"clipBoard.bankIndex==-1\" @click=\"copyPage(bank.index, page.index)\" class=\"text-white\" size=\"10px\"\n                                                flat dense round icon=\"content_copy\" />\n                                            <q-btn v-if=\"clipBoard.bankIndex!=-1\"\n                                                @click=\"pastePage(bank.index, page.index)\" class=\"text-white\" size=\"10px\"\n                                                flat dense round icon=\"content_paste\" />\n                                        </div>\n                                    </q-item-section>\n\n                                </q-item>\n                            </q-list>\n\n                        </q-card>\n                    </div>\n\n                    <div v-else>\n                        <div class=\"q-pa-md row items-start q-gutter-md\">\n\n                            <q-card class=\"my-card\" flat bordered>\n                                <q-card-section>\n                                    <q-card-section>\n                                        <div class=\"text-h4\">\n                                            <b>Welcome to MODX LiveSet Utility</b>\n                                        </div>\n                                        <q-separator horizontal />\n                                        <br>\n                                        <div class=\"text-h6\">\n                                            By using this app, you can swap, copy & paste the banks and pages of\n                                            LiveSet.<br>\n                                            このアプリを使うことで、LiveSetのBankやPageの入れ替えやコピー&ペーストが可能です。<br>\n                                        </div>\n                                        <br>\n                                        <div class=\"text-red-14 text-h6\">\n                                            Please use this app at your own risk.<br>\n                                            The author is not responsible for any damage caused by the use of this\n                                            app.<br>\n                                            このソフトの使用は自己責任でお願いします。<br>\n                                            ソフトの使用によるいかなる損害等については責任をおいかねます。<br>\n                                        </div>\n\n                                        <br><br>\n\n                                        <div class=\"text-h6\">Step 1</div>\n                                        <q-separator horizontal />\n                                        <div class=\"q-pa-md row\">\n                                            Create a backup file with MODX.<br>\n                                            MODXでBackup fileを作成してください。\n                                        </div>\n\n                                        <div class=\"text-h6\">Step 2</div>\n                                        <q-separator horizontal />\n                                        <div class=\"q-pa-md row\">\n                                            Press open button to load the backup file.<br>\n                                            Step 1で作成したBackup fileを\"Open\"ボタンを押して開いてください。\n                                        </div>\n\n                                        <div class=\"text-h6\">Step 3</div>\n                                        <q-separator horizontal />\n                                        <div class=\"q-pa-md row\">\n                                            After editing, press download button to download a modified backup file.<br>\n                                            編集をしたあとに\"Download\"ボタンをおして、変更されたバックアップデータをダウンロードしてください。\n                                        </div>\n\n                                        <div class=\"text-h6\">Step 4</div>\n                                        <q-separator horizontal />\n                                        <div class=\"q-pa-md row\">\n                                            Load the downloaded backup file with MODX.<br>\n                                            MODXでバックアップファイルを読み込んでください。<br>\n                                        </div>\n                                    </q-card-section>\n\n                                </q-card-section>\n                            </q-card>\n                        </div>\n                    </div>\n                </q-page>\n            </q-page-container>\n        </q-layout>\n    </div>\n</template>\n\n<script setup>\n    import Utility from \"../modx_liveset_utility\"\n    import {\n        Buffer\n    } from 'buffer';\n    import {\n        exportFile\n    } from 'quasar'\n    import {\n        ref\n    } from 'vue'\n\n    let isLoaded = ref(false);\n    let isValid = ref(false);\n    let utility = ref(new Utility.ModxLivesetUtility());\n    let banks = ref([]);\n    let fileOpenRef = ref(null);\n    let clipBoard = ref({\n        bankIndex: -1,\n        pageIndex: -1\n    });\n    let numOfBanks = ref(0);\n    let loadedButNoBank = ref(false);\n    let loadedButInvalid = ref(false);\n    let isEdit = ref(false);\n    let editButOpen = ref(false);\n    let fileName = ref(\"\");\n    let couldntDownload = ref(false);\n    let reasonWhyCouldntDownload = ref(\"\");\n    let copiedPageName = ref(\"\");\n\n    init();\n\n    function uploadFile(file) {\n        const fileObject = file.target.files[0];\n\n        let fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(fileObject);\n\n        fileReader.onload = () => {\n            try {\n                utility.value.setX8ADataBuffer(Buffer.from(fileReader.result));\n                update();\n                isValid.value = true;\n                isLoaded.value = utility.value.isValidData();\n                fileName.value = fileObject.name;\n            } catch (e) {\n                if (e == \"DLST not found in the header\") {\n                    loadedButNoBank.value = true;\n                } else {\n                    loadedButInvalid.value = true;\n                }\n                console.log(e);\n                isValid.value = false;\n                isLoaded.value = false;\n            }\n        };\n    }\n\n    function init() {\n        loadedButNoBank.value = false;\n        loadedButInvalid.value = false;\n        isEdit.value = false;\n        editButOpen.value = false;\n        couldntDownload.value = false;\n        reasonWhyCouldntDownload.value = \"\";\n        copiedPageName.value = \"\";\n        clipBoard.value.bankIndex = -1;\n\n        banks.value = [];\n        for (let bankIndex = 0; bankIndex < numOfBanks.value; ++bankIndex) {\n            banks.value[bankIndex] = {\n                name: \"\",\n                index: bankIndex,\n                pages: new Array(16)\n            };\n            for (let pageIndex = 0; pageIndex < 16; ++pageIndex) {\n                banks.value[bankIndex].pages[pageIndex] = {\n                    name: \"\",\n                    index: pageIndex,\n                    slots: new Array(16)\n                };\n                for (let slotIndex = 0; slotIndex < 16; ++slotIndex) {\n                    banks.value[bankIndex].pages[pageIndex].slots[slotIndex] = {\n                        index: slotIndex,\n                        comment: \"\"\n                    };\n                }\n            }\n        }\n    }\n\n    function update() {\n        numOfBanks.value = utility.value.getNumOfBanks();\n        loadedButNoBank.value = (numOfBanks.value == 0);\n        init();\n\n        const numOfPages = 16;\n\n        for (let bankIndex = 0; bankIndex < numOfBanks.value; ++bankIndex) {\n            const bankName = utility.value.getBankName(bankIndex);\n            banks.value[bankIndex].name = bankName;\n            for (let pageIndex = 0; pageIndex < numOfPages; ++pageIndex) {\n                const pageName = utility.value.getPageName(bankIndex, pageIndex);\n                banks.value[bankIndex].pages[pageIndex].name = pageName;\n                for (let slotIndex = 0; slotIndex < 16; ++slotIndex) {\n                    banks.value[bankIndex].pages[pageIndex].slots[slotIndex].comment = utility.value.getSlotComment(\n                        bankIndex, pageIndex, slotIndex);\n                }\n            }\n        }\n    }\n\n    function download() {\n        const x8aDataBuffer = utility.value.getX8ADataBuffer();\n\n        let fileName_ = fileName.value.substring(fileName.value.lastIndexOf('/') + 1); \n        if (fileName_.lastIndexOf(\".\") != -1) fileName_ = fileName_.substring(0, fileName_.lastIndexOf(\".\"));\n\n        const status = exportFile(fileName_ + \"_Mod.X8A\", x8aDataBuffer);\n        if (status) {\n            console.log(\"Succeed\");\n        } else {\n            couldntDownload.value = true;\n            reasonWhyCouldntDownload.value = status;\n        }\n    }\n\n    function openFile() {\n        if (isEdit.value == true) {\n            editButOpen.value = true;\n        } else {\n            fileOpenRef.value.pickFiles();\n        }\n    }\n\n    function swapPage(bankIndex, pageIndexA, pageIndexB) {\n        if (isValidBankIndex(bankIndex) && isValidPageIndex(pageIndexA) && isValidPageIndex(pageIndexB)) {\n            utility.value.swapPage(bankIndex, pageIndexA, bankIndex, pageIndexB);\n            update();\n            isEdit.value = true;\n        }\n    }\n\n    function copyPage(bankIndex, pageIndex) {\n        if (isValidBankIndex(bankIndex) && isValidPageIndex(pageIndex)) {\n            clipBoard.value.bankIndex = bankIndex;\n            clipBoard.value.pageIndex = pageIndex;\n            copiedPageName.value = \"Clear Clipboard (\" + utility.value.getBankName(bankIndex) + \" / \" + utility.value.getPageName(bankIndex, pageIndex) + \")\";\n        }\n    }\n\n    function pastePage(bankIndex, pageIndex) {\n        if (isValidBankIndex(bankIndex) && isValidPageIndex(pageIndex) && clipBoard.value.bankIndex != -1) {\n            utility.value.copyAndPastePage(clipBoard.value.bankIndex, clipBoard.value.pageIndex, bankIndex, pageIndex);\n            clipBoard.value.bankIndex = -1;\n            clipBoard.value.pageIndex = -1;\n            update();\n            isEdit.value = true;\n        }\n    }\n\n    function swapBank(bankIndexA, bankIndexB) {\n        if (isValidBankIndex(bankIndexA) && isValidBankIndex(bankIndexB)) {\n            utility.value.swapBank(bankIndexA, bankIndexB);\n            update();\n            isEdit.value = true;\n        }\n    }\n\n    function isValidBankIndex(index) {\n        return (0 <= index && index <= 15);\n    }\n\n    function isValidPageIndex(index) {\n        return (0 <= index && index <= 15);\n    }\n</script>\n\n<style>\n    .bg-header {\n        background: #212421 !important;\n    }\n\n    .bg-main {\n        background: #6B8283 !important;\n    }\n\n    .bg-open {\n        background: #75A5FF !important;\n    }\n\n    .bg-download {\n        background: #FF6100 !important;\n    }\n\n    .bg-card-background {\n        background: #42494A !important;\n    }\n\n    .bg-card-header {\n        background: #212421 !important;\n    }\n</style>","import script from \"./ModxSetlistUtility.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ModxSetlistUtility.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ModxSetlistUtility.vue?vue&type=style&index=0&id=e85e3ada&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__\nimport QLayout from 'quasar/src/components/layout/QLayout.js';\nimport QHeader from 'quasar/src/components/header/QHeader.js';\nimport QToolbar from 'quasar/src/components/toolbar/QToolbar.js';\nimport QToolbarTitle from 'quasar/src/components/toolbar/QToolbarTitle.js';\nimport QFile from 'quasar/src/components/file/QFile.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport QPageContainer from 'quasar/src/components/page/QPageContainer.js';\nimport QDialog from 'quasar/src/components/dialog/QDialog.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport QCardActions from 'quasar/src/components/card/QCardActions.js';\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QList from 'quasar/src/components/item/QList.js';\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QSeparator from 'quasar/src/components/separator/QSeparator.js';import ClosePopup from 'quasar/src/directives/ClosePopup.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QLayout,QHeader,QToolbar,QToolbarTitle,QFile,QBtn,QPageContainer,QDialog,QCard,QCardSection,QCardActions,QPage,QList,QItem,QItemSection,QSeparator});qInstall(script, 'directives', {ClosePopup});\n","import { render } from \"./App.vue?vue&type=template&id=56e11cf4\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=56e11cf4&lang=css\"\n\nimport exportComponent from \"/Users/Masaki/Develop/MODX_Liveset_Utility/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport 'quasar/dist/quasar.css'\nimport '@quasar/extras/material-icons/material-icons.css'\n\n// To be used on app.use(Quasar, { ... })\nexport default {\n  config: {},\n  plugins: {\n  }\n}","import { createApp } from 'vue'\nimport App from './App.vue'\nimport Quasar from 'quasar/src/vue-plugin.js';\nimport quasarUserOptions from './quasar-user-options'\n\ncreateApp(App).use(Quasar, quasarUserOptions).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js??ref--1-0!../node_modules/cache-loader/dist/cjs.js??ref--1-1!../node_modules/vue-loader-v16/dist/index.js??ref--1-2!./App.vue?vue&type=style&index=0&id=56e11cf4&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/vue-cli-plugin-quasar/lib/loader.vue.auto-import-quasar.js??ref--1-0!../../node_modules/cache-loader/dist/cjs.js??ref--1-1!../../node_modules/vue-loader-v16/dist/index.js??ref--1-2!./ModxSetlistUtility.vue?vue&type=style&index=0&id=e85e3ada&lang=css\""],"sourceRoot":""}