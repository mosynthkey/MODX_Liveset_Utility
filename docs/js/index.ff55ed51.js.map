{"version":3,"file":"js/index.ff55ed51.js","mappings":"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","sources":["webpack://modx_liveset_utility/./src/App.vue","webpack://modx_liveset_utility/./src/modx_liveset_utility.js","webpack://modx_liveset_utility/./src/components/ModxSetlistUtility.vue","webpack://modx_liveset_utility/./src/components/ModxSetlistUtility.vue?7640","webpack://modx_liveset_utility/./src/App.vue?7ccd","webpack://modx_liveset_utility/./src/quasar-user-options.js","webpack://modx_liveset_utility/./src/main.js","webpack://modx_liveset_utility/webpack/bootstrap","webpack://modx_liveset_utility/webpack/runtime/chunk loaded","webpack://modx_liveset_utility/webpack/runtime/define property getters","webpack://modx_liveset_utility/webpack/runtime/global","webpack://modx_liveset_utility/webpack/runtime/hasOwnProperty shorthand","webpack://modx_liveset_utility/webpack/runtime/jsonp chunk loading","webpack://modx_liveset_utility/webpack/startup"],"sourcesContent":["<template>\n  <ModxSetlistUtility/>\n</template>\n\n<script>\nimport ModxSetlistUtility from './components/ModxSetlistUtility.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    ModxSetlistUtility\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</style>\n","// YAMAHA MODX Liveset Utility\n// Copyright © 2022 Masaki Ono. All rights reserved.\n\n// these const values are only used in ModxLivesetUtility\n\nimport { Buffer } from 'buffer';\n//import { write } from 'fs';\n\nconst NUM_BANK = 8;\nconst NUM_PAGE = 16;\nconst NUM_SLOT = 16;\nconst SIZE_SLOT = 0x11E;\nconst SIZE_PAGE = SIZE_SLOT * 16 + 0x15;\nconst SIZE_BANK = SIZE_PAGE * 16 + 0x04 + 0x04 + 0x04 + 0x15;\n\nclass ModxLivesetUtility {\n    constructor() {\n        this.initialize();\n    }\n    \n    initialize() {\n        this.x8aData_ = null;\n        this.isDataValid_ = false;\n\n        this.bankAddresses_ = new Array(NUM_BANK);\n        this.bankNameAddresses_ = new Array(NUM_BANK);\n        \n        this.pageAddresses_ = new Array(NUM_BANK);\n        for (let bankIndex = 0; bankIndex < NUM_BANK; ++bankIndex) this.pageAddresses_[bankIndex] = new Array(NUM_PAGE);\n\n        this.slotAddresses_ = new Array(NUM_BANK);\n        for (let bankIndex = 0; bankIndex < NUM_BANK; ++bankIndex) {\n            this.slotAddresses_[bankIndex] = new Array(NUM_PAGE);\n            for (let pageIndex = 0; pageIndex < NUM_PAGE; ++pageIndex) {\n                this.slotAddresses_[bankIndex][pageIndex] = new Array(NUM_SLOT);\n            }\n        }\n\n        this.numOfBanks_ = 0;\n\n        this.elstAddress_ = 0;\n    }\n\n    setX8ADataBuffer(x8aDataBuffer) {\n        this.initialize();\n\n        this.x8aDataBuffer_ = Buffer.from(x8aDataBuffer);\n\n        // Search DLST from header\n        const header_buffer = x8aDataBuffer.slice(0, 0x110);\n\n        if (header_buffer.slice(0, 11).toString() != \"YAMAHA-YSFC\")  {\n            throw(\"Invalid data\")\n        }\n\n        let dlst_addr_index = header_buffer.indexOf(Buffer.from('DLST'));\n        if (dlst_addr_index < 0) throw('DLST not found in the header');\n        dlst_addr_index += 0x04;\n        const dlst_addr = x8aDataBuffer.readInt32BE(dlst_addr_index);\n\n        // Mark addresses\n        this.numOfBanks_ = x8aDataBuffer.readInt16BE(dlst_addr + 4);\n        if (NUM_BANK < this.numOfBanks_) throw(\"Invalid number of banks\")\n\n        let readIndex = dlst_addr + 4 /* DLST */ + 4 /* Size */ + 4 /* Num of Banks*/;\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            this.bankAddresses_[bankIndex] = readIndex;\n\n            // Skip \"Data\" + ?\n            readIndex += 4 /* Data */ + 4 /* Size */ + 4 /* Num of Banks*/;\n\n            this.bankNameAddresses_[bankIndex] = readIndex;\n            readIndex += 0x15;\n\n            for (let pageIndex = 0; pageIndex < NUM_PAGE; ++pageIndex) {\n                this.pageAddresses_[bankIndex][pageIndex] = readIndex;\n                readIndex += 0x15;\n                \n                for (let slotIndex = 0; slotIndex < NUM_SLOT; ++slotIndex) {\n                    this.slotAddresses_[bankIndex][pageIndex][slotIndex] = readIndex;\n                    readIndex += SIZE_SLOT;\n                }\n            }\n        }\n\n        // ELST       \n        let elst_addr_index = header_buffer.indexOf(Buffer.from('ELST'));\n        if (elst_addr_index < 0) throw('ELST not found');\n        elst_addr_index += 0x04;\n        this.elstAddress_ = x8aDataBuffer.readInt32BE(elst_addr_index);\n\n        /*\n        readIndex = elst_addr + 0x0c;\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            readIndex += 0x04; // Skip \"Entr\"\n\n            const size = x8aDataBuffer.readInt32BE(readIndex);\n            readIndex += 0x04;\n            const name_length = size - 0x16 - 0x02;\n\n            console.log(x8aDataBuffer.slice(readIndex + 0x14, readIndex + 0x16));\n            readIndex += 0x16;\n\n            console.log(this.createValidStringFromNullTerminatedBufferIndex(readIndex, name_length + 0x02));\n            readIndex += name_length + 0x02;\n        }\n        */\n        \n        this.isDataValid_ = true;\n    }\n\n    getX8ADataBuffer() {\n        return this.x8aDataBuffer_;\n    }\n\n    getNumOfBanks() {\n        if (!this.isDataValid_) throw(\"Invalid data\");\n\n        return this.numOfBanks_;\n    }\n\n    getBankName(bankIndex) {\n        if (!this.isDataValid_)            throw(\"Invalid data\");\n        if (this.numOfBanks_ <= bankIndex) throw(\"Bank index : out of range\");\n\n        return this.createValidStringFromNullTerminatedBufferIndex(this.bankNameAddresses_[bankIndex], 0x15);\n    }\n\n    getPageName(bankIndex, pageIndex) {\n        if (!this.isDataValid_)            throw(\"Invalid data\");\n        if (this.numOfBanks_ <= bankIndex) throw(\"Bank index : out of range\");\n        if (NUM_PAGE <= pageIndex)         throw(\"Page index : out of range\");\n\n        return this.createValidStringFromNullTerminatedBufferIndex(this.pageAddresses_[bankIndex][pageIndex], 0x15);\n    }\n\n    getSlotComment(bankIndex, pageIndex, slotIndex) {\n        if (!this.isDataValid_)            throw(\"Invalid data\");\n        if (this.numOfBanks_ <= bankIndex) throw(\"Bank index : out of range\");\n        if (NUM_PAGE <= pageIndex)         throw(\"Page index : out of range\");\n        if (NUM_SLOT <= slotIndex)         throw(\"Slot index : out of range\");\n\n        return this.createValidStringFromNullTerminatedBufferIndex(this.slotAddresses_[bankIndex][pageIndex][slotIndex], 0x15);\n    }\n\n    copyAndPastePage(fromBankIndex, fromPageIndex, toBankIndex, toPageIndex) {\n        const readIndex  = this.pageAddresses_[fromBankIndex][fromPageIndex];\n        const writeIndex = this.pageAddresses_[toBankIndex][toPageIndex];\n\n        for (let index = 0; index < SIZE_PAGE; ++index) {\n            this.x8aDataBuffer_[writeIndex + index] = this.x8aDataBuffer_[readIndex + index];\n        }\n    }\n\n    copyAndPasteAllPages(fromBankIndex, toBankIndex) {\n        for (let pageIndex = 0; pageIndex < NUM_PAGE; ++pageIndex) {\n            this.copyAndPastePage(fromBankIndex, pageIndex, toBankIndex, pageIndex);\n        }\n    }\n\n    swapPage(bankIndexA, pageIndexA, bankIndexB, pageIndexB) {\n        const indexA =  this.pageAddresses_[bankIndexA][pageIndexA];\n        const indexB =  this.pageAddresses_[bankIndexB][pageIndexB];\n\n        for (let index = 0; index < SIZE_PAGE; ++index) {\n            const aData = this.x8aDataBuffer_[indexA + index];\n            this.x8aDataBuffer_[indexA + index] = this.x8aDataBuffer_[indexB + index];\n            this.x8aDataBuffer_[indexB + index] = aData;\n        }\n    }\n\n    swapAllPages(bankIndexA, bankIndexB) {\n        for (let pageIndex = 0; pageIndex < NUM_PAGE; ++pageIndex) {\n            this.swapPage(bankIndexA, pageIndex, bankIndexB, pageIndex);\n        }\n    }\n\n    swapBank(bankIndexA, bankIndexB) {\n        // Edit ELIST\n        let readIndex = this.elstAddress_ + 0x04 * 3;\n        let bankData = new Array(this.numOfBanks_);\n        let bankNumbers = new Array(this.numOfBanks_);\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            const bankEntryAddress = readIndex;\n            let size = this.x8aDataBuffer_.readInt32BE(bankEntryAddress + 0x04) + 0x04 /* Entr */ + 0x04 /* size */;\n\n            const data = Buffer.from(this.x8aDataBuffer_.slice(bankEntryAddress, bankEntryAddress + size));\n            const bankNumber = data.readUInt16BE(0x04 * 3 + 0x02 * 3);\n\n            // swap chunk\n            if (bankIndex == bankIndexA) {\n                bankData   [bankIndexB] = data;\n            } else if (bankIndex == bankIndexB) {\n                bankData   [bankIndexA] = data;\n            } else {\n                bankData[bankIndex] = data;\n            }\n            bankNumbers[bankIndex] = bankNumber;\n\n            readIndex += size;\n        }\n\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            // correct bank index\n            bankData[bankIndex].writeUInt16BE(bankIndex,                 0x04 * 3           ); // bankIndex\n            bankData[bankIndex].writeUInt16BE(0x0c + 0x1F71 * bankIndex, 0x04 * 3 + 0x02    ); // size?\n            bankData[bankIndex].writeUInt16BE(bankNumbers[bankIndex],    0x04 * 3 + 0x02 * 3); // bankIndex\n        }   \n\n        let writeIndex = this.elstAddress_ + 0x04 * 3;\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            for (let readIndex = 0; readIndex < bankData[bankIndex].length; ++readIndex) {\n                this.x8aDataBuffer_.writeUInt8(bankData[bankIndex].readUInt8(readIndex), writeIndex);\n                ++writeIndex;\n            }\n        }\n\n        // Edit DLST\n        const indexA =  this.bankAddresses_[bankIndexA];\n        const indexB =  this.bankAddresses_[bankIndexB];\n\n        for (let index = 0; index < SIZE_BANK; ++index) {\n            const aData = this.x8aDataBuffer_[indexA + index];\n            this.x8aDataBuffer_[indexA + index] = this.x8aDataBuffer_[indexB + index];\n            this.x8aDataBuffer_[indexB + index] = aData;\n        }\n    }\n\n    print() {\n        // for debug\n        for (let bankIndex = 0; bankIndex < this.numOfBanks_; ++bankIndex) {\n            console.log(`Bank${bankIndex + 1} : ${this.getBankName(bankIndex)}`);\n\n            for (let pageIndex = 0; pageIndex < NUM_PAGE; ++pageIndex) {\n                console.log(`  Page${pageIndex + 1} : ${this.getPageName(bankIndex, pageIndex)}`);\n                for (let slotIndex = 0; slotIndex < NUM_SLOT; ++slotIndex) {\n                    const comment = this.getSlotComment(bankIndex, pageIndex, slotIndex);\n                    if (comment != \"\") console.log(`    Slot${slotIndex + 1} : ${comment}`);\n                }\n            }\n        }\n    }\n\n    isValidData() {\n        return this.isDataValid_;\n    }\n\n    createValidStringFromNullTerminatedBufferIndex(index, size) {\n        const buffer = this.x8aDataBuffer_.slice(index, index + size);\n        return buffer.slice(0, buffer.indexOf(0)).toString();\n    }\n}\n\nexport default {\n    ModxLivesetUtility\n};","<template>\n    <div id=\"q-app\">\n        <q-layout class=\"shadow-2 rounded-borders\">\n            <q-header>\n                <q-toolbar class=\"bg-header\">\n                    <q-toolbar-title>MODX LiveSet Utility</q-toolbar-title>\n\n                    <q-file ref=\"fileOpenRef\" class=\"hidden\" @input=\"uploadFile\" accept=\".X8A\"></q-file>\n\n                    <q-btn v-if=\"clipBoard.bankIndex != -1\" :label=\"copiedPageName\" @click=\"clipBoard.bankIndex = -1\" icon=\"content_paste_off\" color=\"card-background\" no-caps\n                    :class=\"isLoaded ? 'q-mr-md' : ''\"  />\n\n                    <q-btn label=\"Open\" @click=\"openFile()\" icon=\"file_open\" color=\"open\"\n                        :class=\"isLoaded ? 'q-mr-md' : ''\" no-caps />\n                    <q-btn v-if=\"isLoaded\" label=\"Download\" @click=\"download()\" icon=\"file_download\" color=\"download\"\n                        no-caps />\n\n                </q-toolbar>\n            </q-header>\n\n            <q-page-container>\n                <q-dialog v-model=\"loadedButNoBank\">\n                    <q-card>\n                        <q-card-section>\n                            <div class=\"text-h6\">Error</div>\n                        </q-card-section>\n\n                        <q-card-section class=\"q-pt-none\">\n                            No liveset data is found in this file. <br>\n                            Please create liveset with MODX and use this app.<br>\n                            <br>\n                            このデータにlivesetの情報が含まれていませんでした。<br>\n                            MODXでLivesetの編集をした後にこのツールをご使用ください。<br>\n                        </q-card-section>\n\n                        <q-card-actions align=\"right\">\n                            <q-btn flat label=\"OK\" color=\"primary\" v-close-popup />\n                        </q-card-actions>\n                    </q-card>\n                </q-dialog>\n\n                <q-dialog v-model=\"loadedButInvalid\">\n                    <q-card>\n                        <q-card-section>\n                            <div class=\"text-h6\">Error</div>\n                        </q-card-section>\n\n                        <q-card-section class=\"q-pt-none\">\n                            Unknown data format.<br>\n                            <br>\n                            このアプリでは読み込めないファイルです。<br>\n                        </q-card-section>\n\n                        <q-card-actions align=\"right\">\n                            <q-btn flat label=\"OK\" color=\"primary\" v-close-popup />\n                        </q-card-actions>\n                    </q-card>\n                </q-dialog>\n\n                <q-dialog v-model=\"editButOpen\">\n                    <q-card>\n                        <q-card-section>\n                            <div class=\"text-h6\">Alert</div>\n                        </q-card-section>\n\n                        <q-card-section class=\"q-pt-none\">\n                            Do you want to discard the change and open another file?<br>\n                            変更内容を破棄して別のBackup fileを開きますか?\n                        </q-card-section>\n\n                        <q-card-actions align=\"right\">\n                            <q-btn flat label=\"OK\" @click=\"fileOpenRef.pickFiles()\" v-close-popup/>\n                            <q-btn flat label=\"Cancel\" color=\"primary\" v-close-popup />\n                        </q-card-actions>\n                    </q-card>\n                </q-dialog>\n\n\n                <q-dialog v-model=\"couldntDownload\">\n                    <q-card>\n                        <q-card-section>\n                            <div class=\"text-h6\">Error</div>\n                        </q-card-section>\n\n                        <q-card-section class=\"q-pt-none\">\n                            Couldn't download in some reason.<br>\n                            ダウンロードできませんでした。<br>\n                            <br>\n                            {{reasonWhyCouldntDownload}}\n                        </q-card-section>\n\n                        <q-card-actions align=\"right\">\n                            <q-btn flat label=\"OK\" color=\"primary\" v-close-popup />\n                        </q-card-actions>\n                    </q-card>\n                </q-dialog>\n\n                <q-page class=\"bg-main fit row justify-center\">\n                    <div v-if=\"isLoaded\" class=\"q-pa-md row items-center q-gutter-md\">\n                        <q-card flat v-for=\"bank in banks\" :key=\"bank.index\"\n                            style=\"width: 300px\">\n                            <q-list dense class=\"bg-card-header text-white\" style=\"max-width: 600px\">\n                                <q-item>\n                                    <q-item-section>\n                                        <b>{{ bank.name }}</b>\n                                    </q-item-section>\n                                    \n                                    <q-item-section side>\n                                        <div class=\"text-grey-8 q-gutter-xs\">\n                                            <q-btn :disable=\"bank.index==0\" @click=\"swapBank(bank.index, bank.index - 1)\"\n                                                :class=\"bank.index==0 ? 'text-grey-8' : 'text-white'\" size=\"10px\" flat dense round icon=\"west\" no-caps />\n                                            <q-btn :disable=\"bank.index==7\" @click=\"swapBank(bank.index, bank.index + 1)\"\n                                                :class=\"bank.index==7 ? 'text-grey-8' : 'text-white'\" size=\"10px\" flat dense round icon=\"east\" no-caps />\n                                        </div>\n                                    </q-item-section>\n                                </q-item>\n                            </q-list>\n\n                            <q-separator />\n\n                            <q-list dense class=\"bg-card-background text-white\" style=\"max-width: 600px\" v-for=\"page in bank.pages\"\n                                :key=\"page.index\">\n                                <q-item>\n                                    <q-item-section>\n                                        <b>{{ page.name }}</b>\n                                    </q-item-section>\n\n                                    <q-item-section side>\n                                        <div class=\"text-grey-8 q-gutter-xs\">\n                                            <q-btn :disabled=\"page.index==0\"\n                                                @click=\"swapPage(bank.index, page.index, page.index - 1)\" :class=\"page.index==0 ? 'text-grey-8' : 'text-white'\"\n                                                size=\"10px\" flat dense round icon=\"arrow_upward\"/>\n                                            <q-btn :disabled=\"page.index==15\"\n                                                @click=\"swapPage(bank.index, page.index, page.index + 1)\" :class=\"page.index==15 ? 'text-grey-8' : 'text-white'\"\n                                                size=\"10px\" flat dense round icon=\"arrow_downward\" />\n                                            <q-btn v-if=\"clipBoard.bankIndex==-1\" @click=\"copyPage(bank.index, page.index)\" class=\"text-white\" size=\"10px\"\n                                                flat dense round icon=\"content_copy\" />\n                                            <q-btn v-if=\"clipBoard.bankIndex!=-1\"\n                                                @click=\"pastePage(bank.index, page.index)\" class=\"text-white\" size=\"10px\"\n                                                flat dense round icon=\"content_paste\" />\n                                        </div>\n                                    </q-item-section>\n\n                                </q-item>\n                            </q-list>\n\n                        </q-card>\n                    </div>\n\n                    <div v-else>\n                        <div class=\"q-pa-md row items-start q-gutter-md\">\n\n                            <q-card class=\"my-card\" flat bordered>\n                                <q-card-section>\n                                    <q-card-section>\n                                        <div class=\"text-h4\">\n                                            <b>Welcome to MODX LiveSet Utility</b>\n                                        </div>\n                                        <q-separator horizontal />\n                                        <br>\n                                        <div class=\"text-h6\">\n                                            By using this app, you can swap, copy & paste the banks and pages of\n                                            LiveSet.<br>\n                                            このアプリを使うことで、LiveSetのBankやPageの入れ替えやコピー&ペーストが可能です。<br>\n                                        </div>\n                                        <br>\n                                        <div class=\"text-red-14 text-h6\">\n                                            Please use this app at your own risk.<br>\n                                            The author is not responsible for any damage caused by the use of this\n                                            app.<br>\n                                            このソフトの使用は自己責任でお願いします。<br>\n                                            ソフトの使用によるいかなる損害等については責任をおいかねます。<br>\n                                        </div>\n\n                                        <br><br>\n\n                                        <div class=\"text-h6\">Step 1</div>\n                                        <q-separator horizontal />\n                                        <div class=\"q-pa-md row\">\n                                            Create a backup file with MODX.<br>\n                                            MODXでBackup fileを作成してください。\n                                        </div>\n\n                                        <div class=\"text-h6\">Step 2</div>\n                                        <q-separator horizontal />\n                                        <div class=\"q-pa-md row\">\n                                            Press open button to load the backup file.<br>\n                                            Step 1で作成したBackup fileを\"Open\"ボタンを押して開いてください。\n                                        </div>\n\n                                        <div class=\"text-h6\">Step 3</div>\n                                        <q-separator horizontal />\n                                        <div class=\"q-pa-md row\">\n                                            After editing, press download button to download a modified backup file.<br>\n                                            編集をしたあとに\"Download\"ボタンをおして、変更されたバックアップデータをダウンロードしてください。\n                                        </div>\n\n                                        <div class=\"text-h6\">Step 4</div>\n                                        <q-separator horizontal />\n                                        <div class=\"q-pa-md row\">\n                                            Load the downloaded backup file with MODX.<br>\n                                            MODXでバックアップファイルを読み込んでください。<br>\n                                        </div>\n                                    </q-card-section>\n\n                                </q-card-section>\n                            </q-card>\n                        </div>\n                    </div>\n                </q-page>\n            </q-page-container>\n        </q-layout>\n    </div>\n</template>\n\n<script setup>\n    import Utility from \"../modx_liveset_utility\"\n    import {\n        Buffer\n    } from 'buffer';\n    import {\n        exportFile\n    } from 'quasar'\n    import {\n        ref\n    } from 'vue'\n\n    let isLoaded = ref(false);\n    let isValid = ref(false);\n    let utility = ref(new Utility.ModxLivesetUtility());\n    let banks = ref([]);\n    let fileOpenRef = ref(null);\n    let clipBoard = ref({\n        bankIndex: -1,\n        pageIndex: -1\n    });\n    let numOfBanks = ref(0);\n    let loadedButNoBank = ref(false);\n    let loadedButInvalid = ref(false);\n    let isEdit = ref(false);\n    let editButOpen = ref(false);\n    let fileName = ref(\"\");\n    let couldntDownload = ref(false);\n    let reasonWhyCouldntDownload = ref(\"\");\n    let copiedPageName = ref(\"\");\n\n    init();\n\n    function uploadFile(file) {\n        const fileObject = file.target.files[0];\n\n        let fileReader = new FileReader();\n        fileReader.readAsArrayBuffer(fileObject);\n\n        fileReader.onload = () => {\n            try {\n                utility.value.setX8ADataBuffer(Buffer.from(fileReader.result));\n                update();\n                isValid.value = true;\n                isLoaded.value = utility.value.isValidData();\n                fileName.value = fileObject.name;\n            } catch (e) {\n                if (e == \"DLST not found in the header\") {\n                    loadedButNoBank.value = true;\n                } else {\n                    loadedButInvalid.value = true;\n                }\n                console.log(e);\n                isValid.value = false;\n                isLoaded.value = false;\n            }\n        };\n    }\n\n    function init() {\n        loadedButNoBank.value = false;\n        loadedButInvalid.value = false;\n        isEdit.value = false;\n        editButOpen.value = false;\n        couldntDownload.value = false;\n        reasonWhyCouldntDownload.value = \"\";\n        copiedPageName.value = \"\";\n        clipBoard.value.bankIndex = -1;\n\n        banks.value = [];\n        for (let bankIndex = 0; bankIndex < numOfBanks.value; ++bankIndex) {\n            banks.value[bankIndex] = {\n                name: \"\",\n                index: bankIndex,\n                pages: new Array(16)\n            };\n            for (let pageIndex = 0; pageIndex < 16; ++pageIndex) {\n                banks.value[bankIndex].pages[pageIndex] = {\n                    name: \"\",\n                    index: pageIndex,\n                    slots: new Array(16)\n                };\n                for (let slotIndex = 0; slotIndex < 16; ++slotIndex) {\n                    banks.value[bankIndex].pages[pageIndex].slots[slotIndex] = {\n                        index: slotIndex,\n                        comment: \"\"\n                    };\n                }\n            }\n        }\n    }\n\n    function update() {\n        numOfBanks.value = utility.value.getNumOfBanks();\n        loadedButNoBank.value = (numOfBanks.value == 0);\n        init();\n\n        const numOfPages = 16;\n\n        for (let bankIndex = 0; bankIndex < numOfBanks.value; ++bankIndex) {\n            const bankName = utility.value.getBankName(bankIndex);\n            banks.value[bankIndex].name = bankName;\n            for (let pageIndex = 0; pageIndex < numOfPages; ++pageIndex) {\n                const pageName = utility.value.getPageName(bankIndex, pageIndex);\n                banks.value[bankIndex].pages[pageIndex].name = pageName;\n                for (let slotIndex = 0; slotIndex < 16; ++slotIndex) {\n                    banks.value[bankIndex].pages[pageIndex].slots[slotIndex].comment = utility.value.getSlotComment(\n                        bankIndex, pageIndex, slotIndex);\n                }\n            }\n        }\n    }\n\n    function download() {\n        const x8aDataBuffer = utility.value.getX8ADataBuffer();\n\n        let fileName_ = fileName.value.substring(fileName.value.lastIndexOf('/') + 1); \n        if (fileName_.lastIndexOf(\".\") != -1) fileName_ = fileName_.substring(0, fileName_.lastIndexOf(\".\"));\n\n        const status = exportFile(fileName_ + \"_Mod.X8A\", x8aDataBuffer);\n        if (status) {\n            console.log(\"Succeed\");\n        } else {\n            couldntDownload.value = true;\n            reasonWhyCouldntDownload.value = status;\n        }\n    }\n\n    function openFile() {\n        if (isEdit.value == true) {\n            editButOpen.value = true;\n        } else {\n            fileOpenRef.value.pickFiles();\n        }\n    }\n\n    function swapPage(bankIndex, pageIndexA, pageIndexB) {\n        if (isValidBankIndex(bankIndex) && isValidPageIndex(pageIndexA) && isValidPageIndex(pageIndexB)) {\n            utility.value.swapPage(bankIndex, pageIndexA, bankIndex, pageIndexB);\n            update();\n            isEdit.value = true;\n        }\n    }\n\n    function copyPage(bankIndex, pageIndex) {\n        if (isValidBankIndex(bankIndex) && isValidPageIndex(pageIndex)) {\n            clipBoard.value.bankIndex = bankIndex;\n            clipBoard.value.pageIndex = pageIndex;\n            copiedPageName.value = \"Clear Clipboard (\" + utility.value.getBankName(bankIndex) + \" / \" + utility.value.getPageName(bankIndex, pageIndex) + \")\";\n        }\n    }\n\n    function pastePage(bankIndex, pageIndex) {\n        if (isValidBankIndex(bankIndex) && isValidPageIndex(pageIndex) && clipBoard.value.bankIndex != -1) {\n            utility.value.copyAndPastePage(clipBoard.value.bankIndex, clipBoard.value.pageIndex, bankIndex, pageIndex);\n            clipBoard.value.bankIndex = -1;\n            clipBoard.value.pageIndex = -1;\n            update();\n            isEdit.value = true;\n        }\n    }\n\n    function swapBank(bankIndexA, bankIndexB) {\n        if (isValidBankIndex(bankIndexA) && isValidBankIndex(bankIndexB)) {\n            utility.value.swapBank(bankIndexA, bankIndexB);\n            update();\n            isEdit.value = true;\n        }\n    }\n\n    function isValidBankIndex(index) {\n        return (0 <= index && index <= 15);\n    }\n\n    function isValidPageIndex(index) {\n        return (0 <= index && index <= 15);\n    }\n</script>\n\n<style>\n    .bg-header {\n        background: #212421 !important;\n    }\n\n    .bg-main {\n        background: #6B8283 !important;\n    }\n\n    .bg-open {\n        background: #75A5FF !important;\n    }\n\n    .bg-download {\n        background: #FF6100 !important;\n    }\n\n    .bg-card-background {\n        background: #42494A !important;\n    }\n\n    .bg-card-header {\n        background: #212421 !important;\n    }\n</style>","import script from \"./ModxSetlistUtility.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ModxSetlistUtility.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ModxSetlistUtility.vue?vue&type=style&index=0&id=e85e3ada&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=56e11cf4\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=56e11cf4&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\nimport 'quasar/dist/quasar.css'\nimport '@quasar/extras/material-icons/material-icons.css'\n\n// To be used on app.use(Quasar, { ... })\nexport default {\n  config: {},\n  plugins: {\n  }\n}","import { createApp } from 'vue'\nimport App from './App.vue'\nimport { Quasar } from 'quasar'\nimport quasarUserOptions from './quasar-user-options'\n\ncreateApp(App).use(Quasar, quasarUserOptions).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t826: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmodx_liveset_utility\"] = self[\"webpackChunkmodx_liveset_utility\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(864); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["NUM_BANK","NUM_PAGE","NUM_SLOT","SIZE_SLOT","SIZE_PAGE","SIZE_BANK","ModxLivesetUtility","constructor","this","initialize","x8aData_","isDataValid_","bankAddresses_","Array","bankNameAddresses_","pageAddresses_","bankIndex","slotAddresses_","pageIndex","numOfBanks_","elstAddress_","setX8ADataBuffer","x8aDataBuffer","x8aDataBuffer_","from","header_buffer","slice","toString","dlst_addr_index","indexOf","dlst_addr","readInt32BE","readInt16BE","readIndex","slotIndex","elst_addr_index","getX8ADataBuffer","getNumOfBanks","getBankName","createValidStringFromNullTerminatedBufferIndex","getPageName","getSlotComment","copyAndPastePage","fromBankIndex","fromPageIndex","toBankIndex","toPageIndex","writeIndex","index","copyAndPasteAllPages","swapPage","bankIndexA","pageIndexA","bankIndexB","pageIndexB","indexA","indexB","aData","swapAllPages","swapBank","bankData","bankNumbers","bankEntryAddress","size","data","bankNumber","readUInt16BE","writeUInt16BE","length","writeUInt8","readUInt8","print","console","log","comment","isValidData","buffer","isLoaded","isValid","utility","banks","fileOpenRef","clipBoard","numOfBanks","loadedButNoBank","loadedButInvalid","isEdit","editButOpen","fileName","couldntDownload","reasonWhyCouldntDownload","copiedPageName","uploadFile","file","fileObject","target","files","fileReader","FileReader","readAsArrayBuffer","onload","value","result","update","name","e","init","pages","slots","numOfPages","bankName","pageName","download","fileName_","substring","lastIndexOf","status","openFile","pickFiles","isValidBankIndex","isValidPageIndex","copyPage","pastePage","__exports__","components","ModxSetlistUtility","render","config","plugins","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}